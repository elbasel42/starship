format = '''
[============ÿπ============](bold red)
[->](bold green) 
'''


[username]
format = " [‚ï≠‚îÄKei]($style)"
style_user = "bold "
style_root = "bold "
show_always = true

# Second param
[hostname]
format = "[$hostname]($style) in "
style = "bold"
trim_at = "-"
ssh_only = false
disabled = false

# Third param
[directory]
truncation_length = 5
truncate_to_repo = false
truncation_symbol = "../"




# Last param in the first line/row
# [cmd_duration]
# min_time = 1
# format = "took [$duration]($style)"
# disabled = falsefalse



# Prompt: optional param 1
# [time]
# format = " üïô $time($style)\n"
# time_format = "%T"
# style = "bright"
# disabled = true

# Prompt: param 2 ‚îî‚îÄ
[character]
success_symbol = " [Œª](bold )"
# error_symbol = " [√ó](bold )"
error_symbol = " [‚ùå](bold )"


[docker_context]
symbol = "Ôåà "
format = "via [$symbol$context]($style) "
style = "bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false


[golang]
symbol = "Óòß "

[memory_usage]
symbol = "Ô°ö "

[package]
symbol = "Ô£ñ "

[php]
symbol = "Óòà "

[python]
symbol = "ÓòÜ "
#pyenv_version_name = true
format = '[${symbol}(\($virtualenv\) )]($style)python (${version} )'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[nodejs]

format = "via [Ô¢ò Node.js $version](bold) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]
# Before all the version info (python, nodejs, php, etc.)


# ! git ascending

[git_branch]
format = "[$symbol](bold)[$repository$name$branch](bold)"
symbol = "Óú• "

[git_commit]
format = "[\\($hash$tag\\)](bold) "
only_detached = false

[git_status]
style = "bold"
ahead = "‚á°${count}"
diverged = "‚áï‚á°${ahead_count}‚á£${behind_count}"
behind = "‚á£${count}"
deleted = "x"

[git_state]
style = "bold"
